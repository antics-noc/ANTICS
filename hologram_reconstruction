# -*- coding: utf-8 -*-
"""
Created on Mon Sep 27 10:57:23 2021

@author: William Major

Edited by Marika Takeuchi, 28th October 2021
"""
import holopy as hp
import numpy as np
import os
import glob
import shutil
#%%  directory / other setting
fin = os.getcwd() # get current directory / directory where original pgm files are saved
#finã€€= "\\dirname\\"
## create directory to save reconstructed image
if not os.path.exists('reconstructed'):
    os.mkdir('reconstructed')
fout = fin + "\\reconstructed\\"
filein= glob.glob(fin + '\\*.PGM') # hologram 
## image propogation: define distance between image plane and reconstruction plane
zstack = np.linspace(0, 100000, 51)

#%% Reconstruction
for jlop in range(len(filein)):
    # output file name
    fout2 = filein[jlop].split("\\")
    fout2 = fout2[-1][0:-4]
    print(fout)
    fileout=[]
    for ilop in range(51):
        a=fout+fout2+"\\"+fout2+"_" +str(ilop)+".png"
        fileout.append(a)
    os.mkdir(fout+fout2)
    # load in the and propogate hologram
    raw_holo = hp.load_image(filein[jlop], spacing=4.4, medium_index = 1, illum_wavelen = 0.658)
    rec_vol = hp.propagate(raw_holo, zstack, cfsp = 3)
    # save 51 images slices in hologram-specific directory
    hp.core.save_images(fileout, rec_vol, scaling=('auto'), depth=8)
    shutil.move(filein[jlop], fout+fout2+"\\")

    
    
    
