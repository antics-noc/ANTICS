# -*- coding: utf-8 -*-
"""
Created on Mon Sep 27 10:57:23 2021

@author: William Major

Edited by Marika Takeuchi, 28th October 2021

Edited by William Major, 6th December 2021
"""
import holopy as hp
import numpy as np
import os
import glob
import shutil

#%%  directory / other setting
wd = os.getcwd() # get current directory / directory where original pgm files are saved

#wdã€€= "\\dirname\\"

## create directory to save reconstructed image
if not os.path.exists('reconstructed'):
    os.mkdir('reconstructed')
fout = wd + "\\reconstructed\\"

# create a list of .PGM files in current working directory
filein= glob.glob(wd + '\\*.PGM') # hologram 

## image propogation: define distance between image plane and reconstruction plane
zstack = np.linspace(0, 100000, 51)

# create a list of numbers for sliced hologram filenames
num_list = [str(i).zfill(2) for i in range(1,52)]


#%% Reconstruction
for jlop in range(len(filein)):
    
    # output file name
    fout2 = filein[jlop].split("\\")
    fout2 = fout2[-1][0:-4]
    print(fout)
    fileout=[]
    
    # loop to create 51 filenames
    for ilop in num_list:
        a=fout+fout2+"\\"+fout2+"_" + ilop +".png"
        fileout.append(a)
    os.mkdir(fout+fout2)
    # load in the and propogate hologram
    raw_holo = hp.load_image(filein[jlop], spacing=4.4, medium_index = 1, illum_wavelen = 0.658)
    rec_vol = hp.propagate(raw_holo, zstack, cfsp = 3)
    # save 51 images slices in hologram-specific directory
    hp.core.save_images(fileout, rec_vol, scaling=('auto'), depth=8)
    shutil.move(filein[jlop], fout+fout2+"\\")
    for f in fileout[:13]:
        os.remove(f)
